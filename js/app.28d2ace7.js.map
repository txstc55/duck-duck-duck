{"version":3,"file":"js/app.28d2ace7.js","mappings":"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","sources":["webpack://duck-duck-duck/./src/App.vue","webpack://duck-duck-duck/./src/views/DuckGenerator.vue","webpack://duck-duck-duck/./src/views/DuckGenerator.vue?efef","webpack://duck-duck-duck/./src/App.vue?7ccd","webpack://duck-duck-duck/./src/main.js","webpack://duck-duck-duck/webpack/bootstrap","webpack://duck-duck-duck/webpack/runtime/chunk loaded","webpack://duck-duck-duck/webpack/runtime/compat get default export","webpack://duck-duck-duck/webpack/runtime/define property getters","webpack://duck-duck-duck/webpack/runtime/global","webpack://duck-duck-duck/webpack/runtime/hasOwnProperty shorthand","webpack://duck-duck-duck/webpack/runtime/jsonp chunk loading","webpack://duck-duck-duck/webpack/startup"],"sourcesContent":["<template>\n  <DuckGenerator />\n</template>\n\n<script>\nimport DuckGenerator from \"./views/DuckGenerator.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    DuckGenerator,\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n</style>\n","<template>\n  <div class=\"container\">\n    <svg\n      viewBox=\"-75 -75 150 150\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"500\"\n      height=\"500\"\n      id=\"duck-svg\"\n    >\n      <title>Duck Duck Duck</title>\n      <desc>CREATED BY XUAN TANG, MORE INFO AT TXSTC55.GITHUB.IO</desc>\n      <rect\n        x=\"-75\"\n        y=\"-75\"\n        width=\"100%\"\n        height=\"100%\"\n        fill=\"rgba(255,255,255, 1)\"\n      />\n      <g\n        :transform=\"\n          'translate(' +\n          bodyTranslationX +\n          ' ' +\n          bodyTranslationY +\n          ') rotate(' +\n          bodyRotation +\n          ') scale(' +\n          bodyScale +\n          ')'\n        \"\n      >\n        <polyline\n          id=\"bodyContour\"\n          :points=\"computedBodyPoints\"\n          fill=\"white\"\n          stroke=\"black\"\n          :stroke-width=\"3.0 / bodyScale\"\n          stroke-linejoin=\"round\"\n        />\n      </g>\n      <g\n        :transform=\"\n          'translate(' +\n          faceTranslationX +\n          ' ' +\n          faceTranslationY +\n          ') rotate(' +\n          faceRotation +\n          ') scale(' +\n          faceScale +\n          ')'\n        \"\n      >\n        <polyline\n          id=\"faceContour\"\n          :points=\"computedFacePoints\"\n          fill=\"white\"\n          stroke=\"black\"\n          :stroke-width=\"3.0 / faceScale\"\n          stroke-linejoin=\"round\"\n        />\n      </g>\n      <g\n        :transform=\"\n          'translate(' +\n          faceTranslationX +\n          ' ' +\n          faceTranslationY +\n          ') rotate(' +\n          faceRotation +\n          ') scale(' +\n          faceScale +\n          ')'\n        \"\n      >\n        <polyline\n          id=\"faceInterior\"\n          :points=\"computedFacePoints\"\n          fill=\"white\"\n          stroke-linejoin=\"round\"\n        />\n      </g>\n      <g\n        :transform=\"\n          'translate(' +\n          bodyTranslationX +\n          ' ' +\n          bodyTranslationY +\n          ') rotate(' +\n          bodyRotation +\n          ') scale(' +\n          bodyScale +\n          ')'\n        \"\n      >\n        <polyline\n          id=\"bodyInterior\"\n          :points=\"computedBodyPoints\"\n          fill=\"white\"\n          stroke-linejoin=\"round\"\n        />\n      </g>\n      <g\n        :transform=\"\n          'translate(' + bodyTranslationX + ' ' + bodyTranslationY + ')'\n        \"\n      >\n        <path\n          id=\"leftLeg\"\n          stroke=\"orange\"\n          stroke-width=\"2\"\n          stoke-linejoin=\"round\"\n          fill=\"none\"\n          stroke-linecap=\"round\"\n          :d=\"leftLegPoints\"\n        ></path>\n        <path\n          id=\"rightLeg\"\n          stroke=\"orange\"\n          stroke-width=\"2\"\n          stoke-linejoin=\"round\"\n          fill=\"none\"\n          stroke-linecap=\"round\"\n          :d=\"rightLegPoints\"\n        ></path>\n\n        <!-- here we deal with left feet -->\n        <g\n          :transform=\"\n            'translate(' +\n            leftLegPointEnd[0] +\n            ' ' +\n            leftLegPointEnd[1] +\n            ') rotate(' +\n            (-faceRotateDegree * 1.2 - leftFeetRotateDegree) +\n            ')'\n          \"\n        >\n          <polyline\n            id=\"leftFeetMiddleFinger\"\n            stroke-width=\"2\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke=\"orange\"\n            :points=\"leftFeetMiddleFingerPoints\"\n          ></polyline>\n        </g>\n        <g\n          :transform=\"\n            'translate(' +\n            leftLegPointEnd[0] +\n            ' ' +\n            leftLegPointEnd[1] +\n            ') rotate(' +\n            (-faceRotateDegree * 1.2 - leftFeetRotateDegree + 25) +\n            ')'\n          \"\n        >\n          <polyline\n            id=\"leftFeetMiddleFinger\"\n            stroke-width=\"2\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke=\"orange\"\n            :points=\"leftFeetMiddleFingerPoints\"\n          ></polyline>\n        </g>\n        <g\n          :transform=\"\n            'translate(' +\n            leftLegPointEnd[0] +\n            ' ' +\n            leftLegPointEnd[1] +\n            ') rotate(' +\n            (-faceRotateDegree * 1.2 - leftFeetRotateDegree - 25) +\n            ')'\n          \"\n        >\n          <polyline\n            id=\"leftFeetMiddleFinger\"\n            stroke-width=\"2\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke=\"orange\"\n            :points=\"leftFeetMiddleFingerPoints\"\n          ></polyline>\n        </g>\n        <g\n          :transform=\"\n            'translate(' +\n            leftLegPointEnd[0] +\n            ' ' +\n            leftLegPointEnd[1] +\n            ') rotate(' +\n            (-faceRotateDegree * 1.2 - leftFeetRotateDegree + 12.5) +\n            ') scale(0.88)'\n          \"\n        >\n          <polyline\n            id=\"leftFeetMiddleFinger\"\n            :stroke-width=\"feetLength / 2.5\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke=\"orange\"\n            :points=\"leftFeetMiddleFingerPoints\"\n          ></polyline>\n        </g>\n        <g\n          :transform=\"\n            'translate(' +\n            leftLegPointEnd[0] +\n            ' ' +\n            leftLegPointEnd[1] +\n            ') rotate(' +\n            (-faceRotateDegree * 1.2 - leftFeetRotateDegree - 12.5) +\n            ') scale(0.88)'\n          \"\n        >\n          <polyline\n            id=\"leftFeetMiddleFinger\"\n            :stroke-width=\"feetLength / 2.5\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke=\"orange\"\n            :points=\"leftFeetMiddleFingerPoints\"\n          ></polyline>\n        </g>\n        <!-- now we deal with right feet -->\n        <g\n          :transform=\"\n            'translate(' +\n            rightLegPointEnd[0] +\n            ' ' +\n            rightLegPointEnd[1] +\n            ') rotate(' +\n            (-faceRotateDegree * 1.2 - rightFeetRotateDegree) +\n            ')'\n          \"\n        >\n          <polyline\n            id=\"rightFeetMiddleFinger\"\n            stroke-width=\"2\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke=\"orange\"\n            :points=\"rightFeetMiddleFingerPoints\"\n          ></polyline>\n        </g>\n        <g\n          :transform=\"\n            'translate(' +\n            rightLegPointEnd[0] +\n            ' ' +\n            rightLegPointEnd[1] +\n            ') rotate(' +\n            (-faceRotateDegree * 1.2 - rightFeetRotateDegree + 25) +\n            ')'\n          \"\n        >\n          <polyline\n            id=\"rightFeetMiddleFinger\"\n            stroke-width=\"2\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke=\"orange\"\n            :points=\"rightFeetMiddleFingerPoints\"\n          ></polyline>\n        </g>\n        <g\n          :transform=\"\n            'translate(' +\n            rightLegPointEnd[0] +\n            ' ' +\n            rightLegPointEnd[1] +\n            ') rotate(' +\n            (-faceRotateDegree * 1.2 - rightFeetRotateDegree - 25) +\n            ')'\n          \"\n        >\n          <polyline\n            id=\"rightFeetMiddleFinger\"\n            stroke-width=\"2\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke=\"orange\"\n            :points=\"rightFeetMiddleFingerPoints\"\n          ></polyline>\n        </g>\n        <g\n          :transform=\"\n            'translate(' +\n            rightLegPointEnd[0] +\n            ' ' +\n            rightLegPointEnd[1] +\n            ') rotate(' +\n            (-faceRotateDegree * 1.2 - rightFeetRotateDegree + 12.5) +\n            ') scale(0.88)'\n          \"\n        >\n          <polyline\n            id=\"rightFeetMiddleFinger\"\n            :stroke-width=\"feetLength / 2.5\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke=\"orange\"\n            :points=\"rightFeetMiddleFingerPoints\"\n          ></polyline>\n        </g>\n        <g\n          :transform=\"\n            'translate(' +\n            rightLegPointEnd[0] +\n            ' ' +\n            rightLegPointEnd[1] +\n            ') rotate(' +\n            (-faceRotateDegree * 1.2 - rightFeetRotateDegree - 12.5) +\n            ') scale(0.88)'\n          \"\n        >\n          <polyline\n            id=\"rightFeetMiddleFinger\"\n            :stroke-width=\"feetLength / 2.5\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke=\"orange\"\n            :points=\"rightFeetMiddleFingerPoints\"\n          ></polyline>\n        </g>\n      </g>\n      <g\n        :transform=\"\n          'translate(' +\n          faceTranslationX +\n          ' ' +\n          faceTranslationY +\n          ') rotate(' +\n          faceRotation +\n          ') scale(' +\n          faceScale +\n          ')'\n        \"\n      >\n        <ellipse\n          :cx=\"rightEyeX\"\n          :cy=\"eyeHeight\"\n          :rx=\"Math.random() * 0.3 + 1.3 / faceScale\"\n          :ry=\"Math.random() * 0.3 + 1.3 / faceScale\"\n          v-if=\"showRightEye\"\n          id=\"rightEye\"\n        />\n        <ellipse\n          :cx=\"leftEyeX\"\n          :cy=\"eyeHeight\"\n          :rx=\"Math.random() * 0.3 + 1.3 / faceScale\"\n          :ry=\"Math.random() * 0.3 + 1.3 / faceScale\"\n          v-if=\"showLeftEye\"\n          id=\"leftEye\"\n        />\n        <polyline\n          id=\"mouth\"\n          :points=\"computedMouthPoints\"\n          fill=\"orange\"\n          stroke=\"orange\"\n          stroke-width=\"0.1\"\n        ></polyline>\n      </g>\n    </svg>\n    <button @click=\"initialization\">ANOTHER</button>\n    <button @click=\"downloadSVGAsText\">SVG</button>\n    <button @click=\"downloadSVGAsPNG\">PNG</button>\n  </div>\n  <div class=\"createdBy\">\n    CREATED BY XUAN TANG<br />\n    NO COMMERCIAL USE<br />CONTACT: TXSTC55@GMAIL.COM<br />MORE AT\n    <a href=\"https://txstc55.github.io\" target=\"_blank\">TXSTC55.GITHUB.IO</a>\n  </div>\n</template>\n\n<script>\nfunction randomFromInterval(min, max) {\n  // min and max included\n  return Math.random() * (max - min) + min;\n}\nexport default {\n  name: \"DuckGenerator\",\n  data() {\n    return {\n      point_per_segment: 15,\n      computedFacePoints: \"\",\n      faceY: 40,\n      faceX: 25,\n      faceScale: 1.0,\n      faceK: 0.01,\n      eyeHeight: 20,\n      eyeLevelWidth: 20,\n      eyePositionScale: 4.0,\n      leftEyeX: 0,\n      rightEyeX: 0,\n      faceRotateDegree: 0,\n      showRightEye: true,\n      showLeftEye: true,\n      mouthY: 0,\n      mouthX: 0,\n      mouthWidth: 0,\n      mouthHeight: 0,\n      faceRotation: 0,\n      faceTranslationX: 0,\n      faceTranslationY: 0,\n      computedBodyPoints: \"\",\n      bodyY: 40,\n      bodyX: 25,\n      bodyScale: 1.0,\n      bodyK: 0.01,\n      bodyRotation: 0,\n      bodyTranslationX: 0,\n      bodyTranslationY: 0,\n      bodyPointsRaw: [],\n      computedRotatedBodyPoints: \"\",\n      computedMouthPoints: \"\",\n      leftLegPoints: \"\",\n      rightLegPoints: \"\",\n      leftLegPointsStart: [],\n      leftLegPointEnd: [],\n      rightLegPointStart: [],\n      rightLegPointEnd: [],\n      leftFeetMiddleFingerPoints: \"\",\n      rightFeetMiddleFingerPoints: \"\",\n      leftFeetRotateDegree: 0,\n      rightFeetRotateDegree: 0,\n      feetLength: 0,\n    };\n  },\n  methods: {\n    getEggShapePoints(a, b, k, isFace, segment_points) {\n      // the function is x^2/a^2 * (1 + ky) + y^2/b^2 = 1\n      // we want to intersect it with a line\n      var result = [];\n      //   var pointString = \"\";\n      for (var i = 0; i < segment_points; i++) {\n        // x positive, y positive\n        // first compute the degree\n        var degree =\n          (Math.PI / 2 / segment_points) * i +\n          randomFromInterval(\n            -Math.PI / 1.1 / segment_points,\n            Math.PI / 1.1 / segment_points\n          );\n        var y = Math.sin(degree) * b;\n        var x =\n          Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\n          randomFromInterval(-a / 200.0, a / 200.0);\n        // pointString += x + \",\" + y + \" \";\n        result.push([x, y]);\n      }\n      for (var i = segment_points; i > 0; i--) {\n        // x is negative, y is positive\n        var degree =\n          (Math.PI / 2 / segment_points) * i +\n          randomFromInterval(\n            -Math.PI / 1.1 / segment_points,\n            Math.PI / 1.1 / segment_points\n          );\n        var y = Math.sin(degree) * b;\n        var x =\n          -Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\n          randomFromInterval(-a / 200.0, a / 200.0);\n        // pointString += x + \",\" + y + \" \";\n        result.push([x, y]);\n      }\n      if (isFace) {\n        var eyeSelectionSlice = Math.floor(\n          segment_points / (Math.random() * 0.3 + 1.8)\n        );\n        var mouthSelectionSlice =\n          eyeSelectionSlice - Math.floor(segment_points / 5);\n      }\n      for (var i = 0; i < segment_points; i++) {\n        // x is negative, y is negative\n        var degree =\n          (Math.PI / 2 / segment_points) * i +\n          randomFromInterval(\n            -Math.PI / 1.1 / segment_points,\n            Math.PI / 1.1 / segment_points\n          );\n        var y = -Math.sin(degree) * b;\n        var x =\n          -Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\n          randomFromInterval(-a / 200.0, a / 200.0);\n        // pointString += x + \",\" + y + \" \";\n        result.push([x, y]);\n        if (isFace) {\n          if (i == mouthSelectionSlice) {\n            var trueDegree = (Math.PI / 2 / segment_points) * i;\n            var trueY = -Math.sin(trueDegree) * b;\n            var trueX = -Math.sqrt(\n              ((1 - (trueY * trueY) / (b * b)) / (1 + k * trueY)) * a * a\n            );\n            this.mouthY = trueY;\n            this.mouthX = -trueX;\n            this.mouthWidth = randomFromInterval(0.4 * -trueX, 0.5 * -trueX);\n            this.mouthHeight = randomFromInterval(\n              0.3 * this.mouthWidth,\n              0.5 * this.mouthWidth\n            );\n            this.mouthY += this.mouthHeight / 2;\n          }\n          if (i == eyeSelectionSlice) {\n            this.eyeHeight = y;\n            this.eyeLevelWidth = -x * 2;\n            this.eyePositionScale = randomFromInterval(2.9, 4.1);\n            var rightEyeDegree = Math.acos(\n              this.eyeLevelWidth / this.eyePositionScale / -x / 1.1\n            );\n            var leftEyeDegree = Math.acos(\n              this.eyeLevelWidth / this.eyePositionScale / x / 1.1\n            );\n            //   console.log(rightEyeDegree, leftEyeDegree);\n            this.faceRotateDegree = randomFromInterval(-80, 80);\n            rightEyeDegree += (this.faceRotateDegree / 180.0) * Math.PI;\n            leftEyeDegree += (this.faceRotateDegree / 180.0) * Math.PI;\n            // if (rightEyeDegree < 0 || rightEyeDegree > Math.PI) {\n            //   this.showRightEye = false;\n            // } else {\n            //   this.showRightEye = true;\n            // }\n            // if (leftEyeDegree < 0 || leftEyeDegree > Math.PI) {\n            //   this.showLeftEye = false;\n            // } else {\n            //   this.showLeftEye = true;\n            // }\n            this.rightEyeX = Math.cos(rightEyeDegree) * -x * 1.1;\n            this.leftEyeX = Math.cos(leftEyeDegree) * -x * 1.1;\n          }\n        }\n      }\n      if (isFace) {\n        this.mouthX =\n          Math.cos(((this.faceRotateDegree * 1.1 + 90) / 180.0) * Math.PI) *\n          this.mouthX;\n      }\n      //   console.log(this.mouthX);\n      for (var i = segment_points; i > 0; i--) {\n        // x is positive, y is negative\n        var degree =\n          (Math.PI / 2 / segment_points) * i +\n          randomFromInterval(\n            -Math.PI / 1.1 / segment_points,\n            Math.PI / 1.1 / segment_points\n          );\n        var y = -Math.sin(degree) * b;\n        var x =\n          Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\n          randomFromInterval(-a / 200.0, a / 200.0);\n        // pointString += x + \",\" + y + \" \";\n        result.push([x, y]);\n      }\n      //   pointString += result[0][0] + \",\" + result[0][1] + \" \";\n      //   const svg = document.getElementById(\"duck-svg\");\n      return result;\n      //   return pointString;\n    },\n    initializeFace() {\n      this.faceY = randomFromInterval(15, 30);\n      this.faceX = randomFromInterval(10, 18);\n      this.faceScale = randomFromInterval(1.0, 1.2);\n      this.faceK =\n        randomFromInterval(0.001, 0.01) * (Math.random() > 0.5 ? 1 : -1);\n      var facePoints = this.getEggShapePoints(\n        this.faceX,\n        this.faceY,\n        this.faceK,\n        true,\n        this.point_per_segment\n      );\n      this.computedFacePoints = \"\";\n      for (var i = 0; i < facePoints.length; i++) {\n        this.computedFacePoints +=\n          facePoints[i][0] + \",\" + facePoints[i][1] + \" \";\n      }\n      this.computedFacePoints +=\n        facePoints[0][0] + \",\" + facePoints[0][1] + \" \";\n      this.faceRotation = randomFromInterval(-30, 30);\n      this.faceTranslationX = randomFromInterval(\n        -this.faceX / 6,\n        this.faceX / 6\n      );\n      this.faceTranslationY = randomFromInterval(\n        -this.faceY / 4,\n        this.faceY / 4\n      );\n    },\n\n    initializeBody() {\n      this.bodyY = randomFromInterval(20, 30);\n      this.bodyX = randomFromInterval(20, 30);\n      this.bodyScale = randomFromInterval(1.0, 1.2);\n      this.faceK =\n        randomFromInterval(0.0001, 0.001) * (Math.random() > 0.5 ? 1 : -1);\n      this.bodyRotation = randomFromInterval(-90, 90);\n\n      this.computedBodyPoints = \"\";\n      var bodyPoints = this.getEggShapePoints(\n        this.bodyX,\n        this.bodyY,\n        this.bodyK,\n        false,\n        this.point_per_segment\n      );\n      for (var i = 0; i < bodyPoints.length; i++) {\n        this.computedBodyPoints +=\n          bodyPoints[i][0] + \",\" + bodyPoints[i][1] + \" \";\n      }\n      this.computedBodyPoints +=\n        bodyPoints[0][0] + \",\" + bodyPoints[0][1] + \" \";\n      this.bodyTranslationY =\n        this.bodyY + randomFromInterval(-this.bodyY / 6, this.bodyY / 6);\n      this.bodyTranslationX = randomFromInterval(\n        -this.bodyX / 8,\n        this.bodyX / 8\n      );\n      this.bodyPointsRaw = bodyPoints;\n    },\n    initializeLeg() {\n      // first we rotate each point by degree\n      var cosTheta = Math.cos((this.bodyRotation / 180.0) * Math.PI);\n      var sinTheta = Math.sin((this.bodyRotation / 180.0) * Math.PI);\n      // matrix is\n      // cosTheta -sinTheta\n      // sinTheta cosTheta\n      var rotatedPoints = [];\n      for (var i = 0; i < this.bodyPointsRaw.length; i++) {\n        var x = this.bodyPointsRaw[i][0];\n        var y = this.bodyPointsRaw[i][1];\n        var rotatedX = x * cosTheta - y * sinTheta;\n        var rotatedY = x * sinTheta + y * cosTheta;\n        rotatedPoints.push([\n          rotatedX * this.bodyScale,\n          rotatedY * this.bodyScale,\n        ]);\n      }\n      this.computedRotatedBodyPoints = \"\";\n      for (var i = 0; i < rotatedPoints.length; i++) {\n        this.computedRotatedBodyPoints +=\n          rotatedPoints[i][0] + \",\" + rotatedPoints[i][1] + \" \";\n      }\n      this.computedRotatedBodyPoints +=\n        rotatedPoints[0][0] + \",\" + rotatedPoints[0][1] + \" \";\n      // we choose lets to be degree 15 and degree -15\n      var legSpreadDegree = 15;\n      var leftLegRotateDegree = randomFromInterval(\n        -this.faceRotateDegree / 4,\n        this.faceRotateDegree / 1.1\n      );\n      var rightLegRotateDegree = randomFromInterval(\n        -this.faceRotateDegree / 4,\n        this.faceRotateDegree / 1.1\n      );\n      while (\n        90 +\n          legSpreadDegree +\n          leftLegRotateDegree -\n          (90 - legSpreadDegree + rightLegRotateDegree) <\n        20\n      ) {\n        leftLegRotateDegree = randomFromInterval(\n          -this.faceRotateDegree / 4,\n          this.faceRotateDegree / 1.1\n        );\n        rightLegRotateDegree = randomFromInterval(\n          -this.faceRotateDegree / 4,\n          this.faceRotateDegree / 1.1\n        );\n      }\n      // console.log(this.faceRotateDegree, legRotateDegree);\n      var leftLegTan = Math.tan(\n        ((90 + legSpreadDegree + leftLegRotateDegree) / 180.0) * Math.PI\n      );\n      var rightLegTan = Math.tan(\n        ((90 - legSpreadDegree + rightLegRotateDegree) / 180.0) * Math.PI\n      );\n      var leftLegEndTan = Math.tan(\n        ((90 + legSpreadDegree + leftLegRotateDegree - 2) / 180.0) * Math.PI\n      );\n      var rightLegEndTan = Math.tan(\n        ((90 - legSpreadDegree + rightLegRotateDegree + 2) / 180.0) * Math.PI\n      );\n      var leftLegClosestDistance = Math.pow(10, 1000);\n      var rightLegClosestDistance = Math.pow(10, 1000);\n      var leftLegEndClosestDistance = Math.pow(10, 1000);\n      var rightLegEndClosestDistance = Math.pow(10, 1000);\n      var leftLegClosestPoint = [0, 0];\n      var rightLegClosestPoint = [0, 0];\n      var leftLegEndClosestPoint = [0, 0];\n      var rightLegEndClosestPoint = [0, 0];\n      for (var i = 0; i < rotatedPoints.length; i++) {\n        // console.log( rotatedPoints[i]);\n        if (rotatedPoints[i][1] > 0) {\n          // we only consider y positive\n          var x = rotatedPoints[i][0];\n          var y = rotatedPoints[i][1];\n          if (Math.pow(y / x - leftLegTan, 2) < leftLegClosestDistance) {\n            leftLegClosestDistance = Math.pow(y / x - leftLegTan, 2);\n            leftLegClosestPoint = [\n              x * randomFromInterval(0.5, 0.8),\n              y * randomFromInterval(0.5, 0.8),\n            ];\n          }\n          if (Math.pow(y / x - rightLegTan, 2) < rightLegClosestDistance) {\n            rightLegClosestDistance = Math.pow(y / x - rightLegTan, 2);\n            rightLegClosestPoint = [\n              x * randomFromInterval(0.5, 0.8),\n              y * randomFromInterval(0.5, 0.8),\n            ];\n          }\n          if (Math.pow(y / x - leftLegEndTan, 2) < leftLegEndClosestDistance) {\n            leftLegEndClosestDistance = Math.pow(y / x - leftLegEndTan, 2);\n            leftLegEndClosestPoint = [\n              x * randomFromInterval(1.2, 1.3),\n              y * randomFromInterval(1.2, 1.3),\n            ];\n          }\n          if (\n            Math.pow(y / x - rightLegEndTan, 2) < rightLegEndClosestDistance\n          ) {\n            rightLegEndClosestDistance = Math.pow(y / x - rightLegEndTan, 2);\n            rightLegEndClosestPoint = [\n              x * randomFromInterval(1.2, 1.3),\n              y * randomFromInterval(1.2, 1.3),\n            ];\n          }\n        }\n      }\n      var leftControlRandom1 = randomFromInterval(0.2, 0.4);\n      var leftControlRandom2 = randomFromInterval(0.2, 0.4);\n      var leftLegNormal = [\n        -leftLegEndClosestPoint[1] + leftLegClosestPoint[1],\n        leftLegEndClosestPoint[0] - leftLegClosestPoint[0],\n      ];\n      if (this.faceRotateDegree < 0) {\n        leftLegNormal = [\n          leftLegEndClosestPoint[1] - leftLegClosestPoint[1],\n          -leftLegEndClosestPoint[0] + leftLegClosestPoint[0],\n        ];\n      }\n      var leftLegControlPoint1 = [\n        leftLegClosestPoint[0] +\n          (leftLegEndClosestPoint[0] - leftLegClosestPoint[0]) *\n            leftControlRandom1 +\n          leftLegNormal[0] /\n            (randomFromInterval(5, 10) +\n              (90 - Math.abs(this.faceRotateDegree)) / 20),\n        leftLegClosestPoint[1] +\n          (leftLegEndClosestPoint[1] - leftLegClosestPoint[1]) *\n            leftControlRandom1 +\n          leftLegNormal[1] /\n            (randomFromInterval(5, 10) +\n              (90 - Math.abs(this.faceRotateDegree)) / 20),\n      ];\n\n      var leftLegControlPoint2 = [\n        leftLegEndClosestPoint[0] +\n          (leftLegClosestPoint[0] - leftLegEndClosestPoint[0]) *\n            leftControlRandom2 +\n          leftLegNormal[0] /\n            (randomFromInterval(5, 10) +\n              (90 - Math.abs(this.faceRotateDegree)) / 20),\n        leftLegEndClosestPoint[1] +\n          (leftLegClosestPoint[1] - leftLegEndClosestPoint[1]) *\n            leftControlRandom2 +\n          leftLegNormal[0] /\n            (randomFromInterval(5, 10) +\n              (90 - Math.abs(this.faceRotateDegree)) / 20),\n      ];\n      var rightControlRandom1 = randomFromInterval(0.2, 0.4);\n      var rightControlRandom2 = randomFromInterval(0.2, 0.4);\n      var rightLegNormal = [\n        -rightLegEndClosestPoint[1] + rightLegClosestPoint[1],\n        rightLegEndClosestPoint[0] - rightLegClosestPoint[0],\n      ];\n      if (this.faceRotateDegree < 0) {\n        rightLegNormal = [\n          rightLegEndClosestPoint[1] - rightLegClosestPoint[1],\n          -rightLegEndClosestPoint[0] + rightLegClosestPoint[0],\n        ];\n      }\n      var rightLegControlPoint1 = [\n        rightLegClosestPoint[0] +\n          (rightLegEndClosestPoint[0] - rightLegClosestPoint[0]) *\n            rightControlRandom1 +\n          rightLegNormal[0] /\n            (randomFromInterval(5, 10) +\n              (90 - Math.abs(this.faceRotateDegree)) / 20),\n        rightLegClosestPoint[1] +\n          (rightLegEndClosestPoint[1] - rightLegClosestPoint[1]) *\n            rightControlRandom1 +\n          rightLegNormal[1] /\n            (randomFromInterval(5, 10) +\n              (90 - Math.abs(this.faceRotateDegree)) / 20),\n      ];\n      var rightLegControlPoint2 = [\n        rightLegEndClosestPoint[0] +\n          (rightLegClosestPoint[0] - rightLegEndClosestPoint[0]) *\n            rightControlRandom2 +\n          rightLegNormal[0] /\n            (randomFromInterval(5, 10) +\n              (90 - Math.abs(this.faceRotateDegree)) / 20),\n        rightLegEndClosestPoint[1] +\n          (rightLegClosestPoint[1] - rightLegEndClosestPoint[1]) *\n            rightControlRandom2 +\n          rightLegNormal[0] /\n            (randomFromInterval(5, 10) +\n              (90 - Math.abs(this.faceRotateDegree)) / 20),\n      ];\n\n      this.rightLegPoints =\n        \"M \" +\n        rightLegClosestPoint[0] +\n        \" \" +\n        rightLegClosestPoint[1] +\n        \" C \" +\n        rightLegControlPoint1[0] +\n        \" \" +\n        rightLegControlPoint1[1] +\n        \", \" +\n        rightLegControlPoint2[0] +\n        \" \" +\n        rightLegControlPoint2[1] +\n        \", \" +\n        rightLegEndClosestPoint[0] +\n        \" \" +\n        rightLegEndClosestPoint[1];\n      this.leftLegPoints =\n        \"M \" +\n        leftLegClosestPoint[0] +\n        \" \" +\n        leftLegClosestPoint[1] +\n        \" C \" +\n        leftLegControlPoint1[0] +\n        \" \" +\n        leftLegControlPoint1[1] +\n        \", \" +\n        leftLegControlPoint2[0] +\n        \" \" +\n        leftLegControlPoint2[1] +\n        \", \" +\n        leftLegEndClosestPoint[0] +\n        \" \" +\n        leftLegEndClosestPoint[1];\n      this.leftLegPointStart = leftLegClosestPoint;\n      this.leftLegPointEnd = leftLegEndClosestPoint;\n      this.rightLegPointStart = rightLegClosestPoint;\n      this.rightLegPointEnd = rightLegEndClosestPoint;\n    },\n    initializeMouth() {\n      this.computedMouthPoints = \"\";\n      var mouthRaw = this.getEggShapePoints(\n        this.mouthWidth,\n        this.mouthHeight,\n        randomFromInterval(0.001, 0.01),\n        false,\n        8\n      );\n      for (var i = 0; i < mouthRaw.length; i++) {\n        this.computedMouthPoints +=\n          mouthRaw[i][0] +\n          this.mouthX +\n          \", \" +\n          (mouthRaw[i][1] + this.mouthY) +\n          \" \";\n      }\n      this.computedMouthPoints +=\n        mouthRaw[0][0] + this.mouthX + \", \" + (mouthRaw[0][1] + this.mouthY);\n      // console.log(this.computedMouthPoints);\n    },\n    initializeFeet() {\n      // first we get the normal\n      var leftLegNormal = [\n        -this.leftLegPointEnd[1] + this.leftLegPointStart[1],\n        this.leftLegPointEnd[0] - this.leftLegPointStart[0],\n      ];\n      if (this.faceRotateDegree < 0) {\n        leftLegNormal = [\n          this.leftLegPointEnd[1] - this.leftLegPointStart[1],\n          -this.leftLegPointEnd[0] + this.leftLegPointStart[0],\n        ];\n      }\n      var rightLegNormal = [\n        -this.rightLegPointEnd[1] + this.rightLegPointStart[1],\n        this.rightLegPointEnd[0] - this.rightLegPointStart[0],\n      ];\n      if (this.faceRotateDegree < 0) {\n        rightLegNormal = [\n          this.rightLegPointEnd[1] - this.rightLegPointStart[1],\n          -this.rightLegPointEnd[0] - this.rightLegPointStart[0],\n        ];\n      }\n      this.feetLength =\n        Math.max(\n          Math.sqrt(\n            Math.pow(this.leftLegPointEnd[0] - this.leftLegPointStart[0], 2) +\n              Math.pow(this.leftLegPointEnd[1] - this.leftLegPointStart[1], 2)\n          ),\n          Math.sqrt(\n            Math.pow(this.rightLegPointEnd[0] - this.rightLegPointStart[0], 2) +\n              Math.pow(this.rightLegPointEnd[1] - this.rightLegPointStart[1], 2)\n          )\n        ) * randomFromInterval(0.4, 0.6);\n      // initialize left feet middle finger\n      this.leftFeetMiddleFingerPoints =\n        \"0,0 0,\" + -this.feetLength * randomFromInterval(0.8, 1.1);\n      this.rightFeetMiddleFingerPoints =\n        \"0,0 0,\" + -this.feetLength * randomFromInterval(0.8, 1.1);\n      this.leftFeetRotateDegree =\n        (90 -\n          Math.atan(\n            this.leftLegPointEnd[1] - this.leftLegPointStart[1],\n            this.leftLegPointEnd[0] - this.leftLegPointStart[0]\n          ) *\n            (180 / Math.PI)) *\n        randomFromInterval(1, 5);\n      this.rightFeetRotateDegree =\n        (90 -\n          Math.atan(\n            this.rightLegPointEnd[1] - this.rightLegPointStart[1],\n            this.rightLegPointEnd[0] - this.rightLegPointStart[0]\n          ) *\n            (180 / Math.PI)) *\n        randomFromInterval(1, 5);\n      // console.log(this.rightFeetRotateDegree);\n      // console.log(this.feetLength);\n    },\n    initialization() {\n      this.initializeFace();\n      this.initializeBody();\n      this.initializeLeg();\n      this.initializeFeet();\n      this.initializeMouth();\n    },\n    downloadSVGAsPNG() {\n      // download our svg as png\n      const svg = document.getElementById(\"duck-svg\");\n      const svgData = new XMLSerializer().serializeToString(svg);\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const img = document.createElement(\"img\");\n      const svgSize = svg.getBoundingClientRect();\n      canvas.width = svgSize.width;\n      canvas.height = svgSize.height;\n      img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + btoa(svgData));\n      img.onload = function () {\n        ctx.drawImage(img, 0, 0);\n        const a = document.createElement(\"a\");\n        const e = new MouseEvent(\"click\");\n        a.download = \"duck.png\";\n        a.href = canvas.toDataURL(\"image/png\");\n        a.dispatchEvent(e);\n      };\n    },\n    downloadSVGAsText() {\n      const svg = document.getElementById(\"duck-svg\");\n      const base64doc = btoa(unescape(encodeURIComponent(svg.outerHTML)));\n      const a = document.createElement(\"a\");\n      const e = new MouseEvent(\"click\");\n      a.download = \"duck.svg\";\n      a.href = \"data:image/svg+xml;base64,\" + base64doc;\n      a.dispatchEvent(e);\n    },\n  },\n\n  computed: {},\n  mounted() {\n    this.initialization();\n  },\n  created() {},\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: inline-flex;\n  /* align-items items in column */\n  flex-direction: column;\n  /* center items horizontally */\n  align-items: center;\n  /* center items vertically */\n  justify-content: center;\n}\nsvg {\n  margin-bottom: 10px;\n}\n\nbutton {\n  margin-top: 10px;\n  width: 200px;\n  padding: 10px;\n  background: transparent;\n  border-width: 2px;\n  font-size: 25px;\n  border-color: black;\n  color: black;\n  font-weight: bold;\n  user-select: none;\n  border-radius: 10px;\n  box-shadow: 2px 2px 0px 0px rgba(0, 0, 0, 0.75);\n}\n\nbutton:hover {\n  background: black;\n  color: white;\n  transition: 0.3s;\n}\nbutton:active {\n  background: rgb(65, 65, 65);\n  box-shadow: 1px 1px 0px 0px rgba(0, 0, 0, 0.75);\n}\n\n.createdBy {\n  position: absolute;\n  bottom: 2px;\n  left: 50%;\n  transform: translate(-50%, 0%);\n  text-align: center;\n  font-size: 5px;\n  z-index: 100;\n  -webkit-user-select: none;\n  /* Safari */\n  -ms-user-select: none;\n  /* IE 10 and IE 11 */\n  user-select: none;\n  /* Standard syntax */\n  font-weight: bold;\n  color: black;\n}\n</style>\n","import { render } from \"./DuckGenerator.vue?vue&type=template&id=257e9c9e&scoped=true\"\nimport script from \"./DuckGenerator.vue?vue&type=script&lang=js\"\nexport * from \"./DuckGenerator.vue?vue&type=script&lang=js\"\n\nimport \"./DuckGenerator.vue?vue&type=style&index=0&id=257e9c9e&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/xuan/Desktop/misc/duck-duck-duck/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-257e9c9e\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=2563147a\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2563147a&lang=css\"\n\nimport exportComponent from \"/Users/xuan/Desktop/misc/duck-duck-duck/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkduck_duck_duck\"] = self[\"webpackChunkduck_duck_duck\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9624); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_DuckGenerator","class","viewBox","xmlns","width","height","id","_createElementVNode","x","y","fill","href","target","_hoisted_1","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","transform","$data","bodyTranslationX","bodyTranslationY","bodyRotation","bodyScale","points","computedBodyPoints","stroke","faceTranslationX","faceTranslationY","faceRotation","faceScale","computedFacePoints","d","leftLegPoints","rightLegPoints","leftLegPointEnd","faceRotateDegree","leftFeetRotateDegree","leftFeetMiddleFingerPoints","feetLength","rightLegPointEnd","rightFeetRotateDegree","rightFeetMiddleFingerPoints","showRightEye","cx","rightEyeX","cy","eyeHeight","rx","Math","random","ry","showLeftEye","leftEyeX","computedMouthPoints","onClick","_cache","args","$options","initialization","downloadSVGAsText","downloadSVGAsPNG","_hoisted_41","randomFromInterval","min","max","name","data","point_per_segment","faceY","faceX","faceK","eyeLevelWidth","eyePositionScale","mouthY","mouthX","mouthWidth","mouthHeight","bodyY","bodyX","bodyK","bodyPointsRaw","computedRotatedBodyPoints","leftLegPointsStart","rightLegPointStart","methods","getEggShapePoints","a","b","k","isFace","segment_points","result","i","degree","PI","sin","sqrt","push","eyeSelectionSlice","floor","mouthSelectionSlice","trueDegree","trueY","trueX","this","rightEyeDegree","acos","leftEyeDegree","cos","initializeFace","facePoints","length","initializeBody","bodyPoints","initializeLeg","cosTheta","sinTheta","rotatedPoints","rotatedX","rotatedY","legSpreadDegree","leftLegRotateDegree","rightLegRotateDegree","leftLegTan","tan","rightLegTan","leftLegEndTan","rightLegEndTan","leftLegClosestDistance","pow","rightLegClosestDistance","leftLegEndClosestDistance","rightLegEndClosestDistance","leftLegClosestPoint","rightLegClosestPoint","leftLegEndClosestPoint","rightLegEndClosestPoint","leftControlRandom1","leftControlRandom2","leftLegNormal","leftLegControlPoint1","abs","leftLegControlPoint2","rightControlRandom1","rightControlRandom2","rightLegNormal","rightLegControlPoint1","rightLegControlPoint2","leftLegPointStart","initializeMouth","mouthRaw","initializeFeet","atan","svg","document","getElementById","svgData","XMLSerializer","serializeToString","canvas","createElement","ctx","getContext","img","svgSize","getBoundingClientRect","setAttribute","btoa","onload","drawImage","e","MouseEvent","download","toDataURL","dispatchEvent","base64doc","unescape","encodeURIComponent","outerHTML","computed","mounted","created","__exports__","components","DuckGenerator","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}